{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","helpers/scrollToSelectedPerson.ts","components/PeopleTableRow/PeopleTableRow.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","helpers/getPreparedPeople.ts","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","React","memo","to","navTitle","className","isActive","cn","Navbar","role","App","Loader","PersonLink","person","selectAndShowPerson","slug","sex","onClick","name","scrollToSelectedPerson","personSlug","selectedPerson","document","getElementById","scrollIntoView","behavior","block","PeopleTableRow","useParams","useCallback","id","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getPreparedPeople","find","mom","dad","PeoplePage","useState","setPeople","isLoading","setIsLoading","isDataLoaded","setIsDataLoaded","errorMessage","setErrorMessage","loadPeople","loadedPeople","preparedPeople","useEffect","isLoadedPeopleExist","length","isLoadedPeopleNotExist","HomePage","NotFoundPage","createRoot","render","path","element","index","replace"],"mappings":"6QASaA,EAA+BC,IAAMC,MAChD,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GARL,ICPWI,EAAmBP,IAAMC,MAAK,kBACzC,qBACE,UAAQ,MACRG,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACL,EAAD,CAAaG,GAAG,IAAIC,SAAS,SAC7B,cAACJ,EAAD,CAAaG,GAAG,UAAUC,SAAS,iBAVA,ICI9BM,G,MAAgBT,IAAMC,MACjC,kBACE,sBAAK,UAAQ,MAAb,UACE,cAACM,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANR,K,sBCLWM,G,MAAmBV,IAAMC,MAAK,kBACzC,qBAAKG,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFwB,KCO9BO,EAA8BX,IAAMC,MAAK,gBACpDW,EADoD,EACpDA,OACAC,EAFoD,EAEpDA,oBAFoD,OAIpD,cAAC,IAAD,CACEX,GAAE,aAAQU,EAAOE,MACjBV,UAAWE,IAAG,CAAE,kBAAkC,MAAfM,EAAOG,MAC1CC,QAAS,WACHH,GACFA,EAAoBD,EAAOE,KAE9B,EAPH,SASGF,EAAOK,MAb0C,ICVzCC,EAAyB,SAACC,GACrC,IAAMC,EAAiBC,SAASC,eAAeH,GAE3CC,GACFA,EAAeG,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAE9D,ECKYC,EAAkC1B,IAAMC,MAAK,YAEnD,IADLW,EACI,EADJA,OAEQE,EAASa,cAATb,KAEFD,EAAsBe,sBAAYV,EAAwB,IAEhE,OACE,qBACEW,GAAIjB,EAAOE,KACX,UAAQ,SACRV,UAAWE,IACT,CAAE,yBAA0BM,EAAOE,OAASA,IAJhD,UAOE,6BACE,cAACH,EAAD,CAAYC,OAAQA,MAGtB,6BAAKA,EAAOG,MACZ,6BAAKH,EAAOkB,OACZ,6BAAKlB,EAAOmB,OAEZ,6BACGnB,EAAOoB,OACN,cAACrB,EAAD,CACEC,OAAQA,EAAOoB,OACfnB,oBAAqBA,IAGvBD,EAAOqB,YAAc,MAIzB,6BACGrB,EAAOsB,OACN,cAACvB,EAAD,CACEC,OAAQA,EAAOsB,OACfrB,oBAAqBA,IAGvBD,EAAOuB,YAAc,QAK9B,ICjDYC,EAA+BpC,IAAMC,MAAK,YAEhD,IADLoC,EACI,EADJA,OAEA,OACE,wBACE,UAAQ,cACRjC,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGiC,EAAOC,KAAI,SAAA1B,GAAM,OAChB,cAACc,EAAD,CAEEd,OAAQA,GADHA,EAAOE,KAFE,QASzB,IC5BM,SAASyB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,WCZYQ,EAAoB,SAACX,GAAD,OAC/BA,EAAOC,KAAI,SAAA1B,GACT,IAAMoB,EAASK,EAAOY,MAAK,SAAAC,GAAG,OAC5BA,EAAIjC,OAASL,EAAOqB,UADQ,IAGxBC,EAASG,EAAOY,MAAK,SAAAE,GAAG,OAC5BA,EAAIlC,OAASL,EAAOuB,UADQ,IAI9B,OAAO,YAAC,eAEDvB,GAFP,IAGIoB,SACAE,UAGL,GAhB8B,ECKpBkB,EAAuBpD,IAAMC,MAAK,WAC7C,MAA4BoD,mBAAmB,IAA/C,mBAAOhB,EAAP,KAAeiB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAU,iDAAG,uGACjBL,GAAa,GADI,kBAIYjB,IAJZ,OAITuB,EAJS,OAMTC,EAAiBf,EAAkBc,GAEzCR,EAAUS,GACVL,GAAgB,GATD,kDAWfE,EAAgB,qBAXD,yBAafJ,GAAa,GAbE,6EAAH,qDAiBhBQ,qBAAU,WACRH,GACD,GAAE,IAEH,IAAMI,EAAsBR,GAAgBpB,EAAO6B,OAC7CC,EAAyBV,IAAiBpB,EAAO6B,OAEvD,OACE,qCACE,oBAAI9D,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGmD,GAAa,cAAC,EAAD,IAEbI,GACC,mBAAG,UAAQ,qBAAqBvD,UAAU,kBAA1C,SACGuD,IAIJQ,GACC,mBAAG,UAAQ,kBAAX,+CAKDF,GACC,cAAC7B,EAAD,CACEC,OAAQA,WAOrB,IChEY+B,EAAqBpE,IAAMC,MAAK,kBAC3C,oBAAIG,UAAU,QAAd,sBAD2C,ICAhCiE,EAAyBrE,IAAMC,MAAK,kBAC/C,oBAAIG,UAAU,QAAd,2BAD+C,ICcjDkE,qBAAWjD,SAASC,eAAe,SAChCiD,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,eAAC,IAAD,CAAOD,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAACrB,EAAD,MACtB,cAAC,IAAD,CAAOoB,KAAK,QAAQC,QAAS,cAACrB,EAAD,SAG/B,cAAC,IAAD,CAAOsB,OAAK,EAACD,QAAS,cAACL,EAAD,MACtB,cAAC,IAAD,CAAOI,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUvE,GAAG,IAAIyE,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAACJ,EAAD,a","file":"static/js/main.303e93cf.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  navTitle: string;\n};\n\nexport const PageNavLink: React.FC<Props> = React.memo(\n  ({ to, navTitle }) => (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {navTitle}\n    </NavLink>\n  ),\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: React.FC = React.memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" navTitle=\"Home\" />\n        <PageNavLink to=\"/people\" navTitle=\"People\" />\n      </div>\n    </div>\n  </nav>\n));\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App: React.FC = React.memo(\n  () => (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  ),\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  selectAndShowPerson?: (slug: string) => void;\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(({\n  person,\n  selectAndShowPerson,\n}) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n    onClick={() => {\n      if (selectAndShowPerson) {\n        selectAndShowPerson(person.slug);\n      }\n    }}\n  >\n    {person.name}\n  </Link>\n));\n","export const scrollToSelectedPerson = (personSlug: string) => {\n  const selectedPerson = document.getElementById(personSlug);\n\n  if (selectedPerson) {\n    selectedPerson.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  }\n};\n","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { scrollToSelectedPerson } from '../../helpers/scrollToSelectedPerson';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleTableRow: React.FC<Props> = React.memo(({\n  person,\n}) => {\n  const { slug } = useParams();\n\n  const selectAndShowPerson = useCallback(scrollToSelectedPerson, []);\n\n  return (\n    <tr\n      id={person.slug}\n      data-cy=\"person\"\n      className={cn(\n        { 'has-background-warning': person.slug === slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <PersonLink\n            person={person.mother}\n            selectAndShowPerson={selectAndShowPerson}\n          />\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <PersonLink\n            person={person.father}\n            selectAndShowPerson={selectAndShowPerson}\n          />\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n});\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PeopleTableRow } from '../PeopleTableRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleTableRow\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]) => (\n  people.map(person => {\n    const mother = people.find(mom => (\n      mom.name === person.motherName\n    ));\n    const father = people.find(dad => (\n      dad.name === person.fatherName\n    ));\n\n    return (\n      {\n        ...person,\n        mother,\n        father,\n      }\n    );\n  })\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { getPreparedPeople } from '../helpers/getPreparedPeople';\n\nexport const PeoplePage: React.FC = React.memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      const preparedPeople = getPreparedPeople(loadedPeople);\n\n      setPeople(preparedPeople);\n      setIsDataLoaded(true);\n    } catch (error) {\n      setErrorMessage('Can\\'t load people');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isLoadedPeopleExist = isDataLoaded && people.length;\n  const isLoadedPeopleNotExist = isDataLoaded && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {isLoadedPeopleNotExist && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoadedPeopleExist && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}